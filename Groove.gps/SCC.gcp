recipe SCC() {
	DeleteComponent;
	alap DeleteComponent;
	SetResultTrue;
}

recipe HasCycle() {
	MarkCycleEdge;
	RemoveCycleEdge;
	MarkedPath;
	AddCycleEdge;
	SetResultTrue;
}

recipe MST() {
	IsConnected;
	alap AddEdgeSpanningTree;
	alap RemoveUnused;
	SetResultTrue;
}

recipe IsTree() {
	IsConnected;
	IsForest();
}

recipe IsForest() {
	if (MarkNodeEdgeAppl) {
		do { 
			MarkNodeEdge;
		} while (MarkNodeEdgeAppl)
		AllNodesMarked;
	}
	AllNodesMarked;

}

recipe HasOddCycle() {
	MarkCycleEdge;
	RemoveCycleEdge;
	MarkedPathEven;
	AddCycleEdge;
}

recipe IsBipartite() {
	try {
		HasOddCycle();
	} else {
		SetResultTrue;
	}
}